name: CI Pipeline

on:
  push:
    branches:
      - 'main'
  pull_request:

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
    - name: Checkout the repository
      uses: actions/checkout@v2

    - name: Install node
      uses: actions/setup-node@v1
      with:
        node-version: 16.x

    - name: Cache node modules
      id: cache-node-modules
      uses: actions/cache@v1
      with:
        path: node_modules
        key: ${{ runner.os }}-cache-node-modules-${{ hashFiles('**/package-lock.json') }}

    - name: Install npm dependencies
      if: steps.cache-node-modules.outputs.cache-hit != 'true'
      run: |
        npm install

    - name: Run Lint
      run: |
        npm run lint

    - name: Run Build
      run: |
        npm run build

  publish:
    name: Publish
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Checkout the repository
      uses: actions/checkout@v2

    - name: Define application version
      id: app-version
      run: echo "::set-output name=version::$(jq -r ".version" package.json)"

    - name: Create GitHub release
      uses: ncipollo/release-action@v1
      with:
        tag: ${{ steps.app-version.outputs.version }}
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Build & push Docker image
      uses: elgohr/Publish-Docker-Github-Action@v5
      with:
        name: kakuzei/ui.kakuzei.com
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        tags: "latest,${{ steps.app-version.outputs.version }}"
